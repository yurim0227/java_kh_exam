package com.kh.hw.controller;

public class Function {
//	클래스 명 : com.kh.hw.controller.Function
//	메뉴에서 실행시킬 메소드들을 모두 작성
//
//	이후 나오는 모든 메소드들은 com.kh.hw.controller.Function 클래스 안에 있는 메소드들임
//	
//	메소드 명 : public void calculator(){}
//	정수 두 개와 연산자 하나를 키보드로 입력 받아 두 정수는 int변수에, 연산문자는 char에 저장
//	연산문자가 +이면 두 정수의 합 계산, -이면 두 정수의 차 계산, x 또는 X이면 두 정수의 곱,
//	/이면 두 정수의 나누기 몫이나 나누는 수(두 번째 수)가 0이면 “0으로 나눌 수 없습니다.” 출력하고
//	결과 값은 0으로 처리
//
//	ex.
//	첫 번째 정수 : 5
//	두 번째 정수 : 0
//	연산자(+, -, x, /) : /
//	0으로 나눌 수 없습니다.
//	5 / 0 = 0
	public void calculator() {
		
	}
//	메소드 명 : public void totalCalculator(){}
//	키보드로 정수 두 개를 입력 받아 두 정수 중 작은 값을 시작 값으로 큰 값을 종료 값으로 사용
//	작은 값에서 큰 값까지 정수 합계를 구함
//
//	ex.
//	첫 번째 정수 : 3
//	두 번째 정수 : 1
//	1부터 3까지 정수들의 합 : 6
	public void totalCalculator() {
		
	}
//	메소드 명 : public void printProfile(){}
//	신상 정보들을 자료형에 맞춰 변수에 기록하고 변수에 기록된 값 출력
//
//	ex.
//	이름 : 박신우
//	나이 : 33
//	성별 : 여자
//	성격 : 소심
//	이름 : 박신우
//	나이 : 33
//	성별 : 여자
//	성격 : 소심
	public void printProfile() {
		
	}
//	메소드 명 : public void printScore(){}
//	키보드로 입력 받은 값들을 변수에 기록하여 변수 값을 화면에 출력
//	점수가 90점 이상이면 A학점, 80이상 90미만이면 B, 70이상 80미만이면 C,
//	60이상 70미만 D, 60미만 F학점을 매김
//
//	ex.
//	이름 : 박신우
//	학년 : 3
//	반 : 3
//	번 : 15
//	성별(M/F) : F
//	성적 : 89.75
//	3학년 3반 15번 여학생 박신우의 점수는 89.75이고 B학점입니다.
	public void printScore() {
		
	}
//	메소드 명 : public void printStarNumber(){}
//	정수를 하나 입력 받아 그 수가 양수일 때만 입력된 수를 줄 수로 적용하여 아래와 같이 출력
//
//	ex.
//	정수 : 5 정수 : -5
//	1 양수가 아닙니다.
//	*2
//	**3
//	***4
//	****5
	public void printStarNumber() {
		
	}
//	메소드 명 : public void sumRandom(){}
//	1부터 100 사이의 정수 중 임의의 정수를 하나 발생시켜 1부터 랜덤 수까지의 합계 출력
//
//	ex.
//	1부터 70까지의 합 : 2485
	public void sumRandom() {
		
	}
//	메소드 명 : public void exceptGugu(){}
//	정수를 하나 입력 받아 그 수가 양수일 때만 그 수의 구구단 출력
//	단 곱하기 수가 입력 받은 단의 배수일 경우 출력 제외
//
//	ex.
//	정수 : 3
//	3 * 1 = 3
//	3 * 2 = 6
//	3 * 4 = 12
//	3 * 5 = 15
//	3 * 7 = 21
//	3 * 8 = 24
	public void exceptGugu() {
		
	}
//	메소드 명 : public void diceGame(){}
//	두 개의 주사위가 만들어낼 수 있는 모든 경우의 수를 랜덤으로 정하고
//	랜덤으로 정해진 두 주사위 눈의 합이 입력된 수와 같은 경우 “맞췄습니다“ 출력,
//	입력 값과 다르면 “틀렸습니다“ 출력하여 맞출 때까지 반복
//	값을 맞추면 “계속 하시겠습니까? (y/n) : “가 출력되고
//	‘y’ 또는 ‘Y’ 입력 시 새로운 랜덤 수가 정해지고 처음부터 다시 시작, ‘n’ 또는 ‘N’ 입력 시 종료
//	
//	ex.
//	주사위 두 개의 합을 맞춰보세요(1~12입력) : 5
//	정답입니다.
//	주사위의 합 : 5
//	계속 하시겠습니까?(y/n) : y
//	주사위 두 개의 합을 맞춰보세요(1~12입력) : 12
//	틀렸습니다.
//	주사위 두 개의 합을 맞춰보세요(1~12입력) : 8
//	틀렸습니다.
//	주사위 두 개의 합을 맞춰보세요(1~12입력) : 9
//	정답입니다.
//	주사위의 합 : 9
//	계속 하시겠습니까?(y/n) : n
//	종료합니다.
	public void diceGame() {
		
	}
}